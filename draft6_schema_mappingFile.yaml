## notes for developers:
## - use this to validate mappingFile linked by a registry entry
## - this schema has "$ref" that need to be expanded in use.
##   Python has the library jsonref that can be used for this. 
## - this schema MUST have type:object/properties for each object. When
##   removed, the validation will not work correctly. 
## - from Andrew Su: for now, require less 
## this is 79 char long #######################################################

title: Schema for mappingFiles linked to x-bte-association-retrieval
$schema: 'http://json-schema.org/draft-07/schema#'
type: object
description: >-
  Contains the mapping between possible values in the response fields (as
  string keys) to info in the desired format. Will be used often for provenance
properties:
  ## not required (not necessarily always present)
  provenanceMapping: 
    type: object
    minProperties: 1
    patternProperties:
      .:  
        description: >-
          Array of objects (Python list-of-dict-like). Lists the sources and
          associated info (including how they create associations)
        ## similar to oneProvenanceList in registry file schema
        type: array
        minItems: 1
        items:
          $ref: '#/definitions/oneProvenanceUnit'    
definitions:
## referenceObj and contextObj differ from their corresponding registry schemas;
##   they only allow staticValue sub-schema
  staticValue:
    description: >-
      Info is not dependent on API/JSON-response. In this situation, a static
      value can be set in the registry using the value field
    type: object
    required:  
    - value
    additionalProperties: False
    properties:
      value: 
        oneOf:  ## string or array of strings
        - type: array
          minItems: 1
          items:
            type: string
        - type: string   
  referenceObj:  
    description: >- 
      Used to provide publications and website URLs for users to learn more
      about an association, knowledge-source, measure, context/relevance, etc
    type: object
    additionalProperties: False
    minProperties: 1
    properties: 
      publications:
        type: object
        minProperties: 1
        patternProperties:
        ## keys are ID namespace, all-lowercase. 
        ## Examples: pmid, pmc, doi, biorixv, medrxiv
          .: 
            type: object 
            ## same as staticValue sub-schema except it allows for numbers
            ##   since IDs are often automatically parsed as numbers...  
            required:  
            - value
            additionalProperties: False
            properties:
              value: 
                oneOf:  
                - type: array
                  minItems: 1
                  items:
                    type: [string, number]
                - type: [string, number]
      websites:  ## have a value field with string/array of strings
        $ref: '#/definitions/staticValue'
  oneProvenanceUnit:  
  ## same as in registry file schema, except for references and context
    type: object
    required:
    - name
    - sourceType
    additionalProperties: False
    properties:
      name:
        description: >-
          Name of the source (KP API, knowledge-source, database, text
          corpus, etc)
        type: string
      sourceType:
        ## ?? set as enum (set options)                      
        description: >-
          Type of the source (KP API, knowledge-source, database, text
          corpus, etc). Current possible values include service,
          knowledgebase, publications, text, clinical_database
        type: string
      version:        
        description: >-
          Source version (KP API, knowledge-source, database, text corpus, etc)
        type: string
      versionType:
        ## ?? set as enum (set options)                      
        description: >-
          There are different formats for versioning. Current possible values
          include date_last_updated, version_number, data_from_this_date,
          latest_date_covered
        type: string
      method:
        ## Ideally, very similar methods have the same values. The many 
        ##   possible options make it hard to make as an enum. 
        ## Note that some sources won't have methods (like text corpus...)
        description: >-
          Keyword noting what the source did to create associations from data
          or knowledge. Current possible values include ingest, NLP,
          manual_curation, shared_phenotype, shared_disease, shared_variant,
          submission, orthology_mapping
        type: string
        ## manual_curation means people (aka curators) are trained to make 
        ##   these associations or the associations were REVIEWED by curators
        ## submission means people made the associations but their work wasn't 
        ##   necessarily made or reviewed by curators 
      sourceReferences:
      ## for publications/websites with info on how associations were made
      ## likely used to pick the sourceType/method/sourceContext and write
      ##   descriptiveInfo
        $ref: '#/definitions/referenceObj'  
      descriptiveInfo:      
        description: >-
          Long-text description of what the source did to create associations.
          Try to include enough detail that a reader would understand what
          happened
        type: string        
      sourceContext:
      ## used when the source was species-specific, disease-specific, etc
      ## associations from the source could still be widely applicable
        $ref: '#/definitions/contextObj'  
  ## CONTEXT DATA OBJECT
  contextObj:     
    description: >-
      Object, Python dict-like. Keys specify the type of context. Values
      depend on where the information comes from. After post-processing, the
      context should be ontology terms (curies) or short-strings.
      Context/relevance is information that restricts the use or
      interpretation of this association. This lets a developer know if the
      operation or the associations retrieved are relevant to the question
      being asked
    type: object
    additionalProperties: False
    minProperties: 1
    patternProperties:
      ## cell line info counts as experimentalSpecific
      taxonSpecific|diseaseSpecific|cohortSpecific|experimentalSpecific:
        $ref: '#/definitions/staticValue'