## example of using the x-bte-association-retrieval schema 
##   to write registry entries for querying MyDisease.info API
##   (operations based on disgenet data)
## notes about this specific registry entry: 
## - some API/JSON-response fields weren't modeled (YearInitial, YearFinal for
##   the years first and last reported)
## - MyDisease.info is a complex API with a lot of operations/sources that
##   aren't included here

## notes for developers:
## - this registry file is related to other files: provenance-mapping files,
##   BTE code, and an example of a processed association. 
## this is 79 char long #######################################################

## notes for Kevin:
## - set up disease-disease1 operation using
##   https://www.disgenet.org/static/disgenet_ap1/files/downloads/disease_to_disease_CURATED.tsv.gz
## - could merge disease-variant associations (when only diff is pubmed field)

components:      
  ## operations to query KPs for associations go under this x-bte extension
  x-bte-association-retrieval:  
  ## each object below describes one operation 
    disease-gene1:  ## name for this particular operation
    ## raw API response example used to help write this:
    ## http://mydisease.info/v1/disease/MONDO:0016419?fields=
    ##   disgenet.genes_related_to_disease
      inputsAndQueryInfo:  ## required
      ## ?? add UMLS, PhenotypicFeature? 
      - id: UMLS
        semantic: Disease
        ## ?? check that input IDs don't have prefixes
        queryInfo:  ## required
          supportBatch: true
          inputSeparator: ","
          parameters:
            fields: "disgenet.genes_related_to_disease"
          requestBody:
            body:     
              q: "{inputs[0]}"
              scopes: "mondo.xrefs.umls, disgenet.xrefs.umls"
            header: "application/x-www-form-urlencoded"        
      outputs:   ## required
      - id: NCBIGene
        semantic: Gene  
        ## assume no prefix in output IDs
        responseField: "disgenet.gene_related_to_disease.gene_id"
      predicateInfo:   ## required
      ## biolink / id / label use staticValue sub-schema 
        biolink:  
          value: "related_to"  
        id:  
          value: "SIO:001403" 
        label: 
          value: "SIO:is_associated_with" 
      references:  ## optional, include when possible
        publications:
        ## API response field is an array of ints (PMIDs, no prefixes) 
        ## uses the takesOnResponseValue sub-schema since that format is fine
        ##   for the final values (see the processed association schema)
          pmid: 
            responseField: "disgenet.genes_related_to_disease.pubmed"
        websites:    ## uses the transformUsingTemplate sub-schema
          instructions: >-
            Create an array of one or more strings using the template. There
            should be a separate URL for each disease ID. Use the source
            keyword and gene ID in the association. Result in processed
            association should be a key (websites) -> array of webpage URL
            strings (see processed association schema)
          ## this should be parsed as one string with no spaces
          template:
            "https://www.disgenet.org/browser/0/1/1/{disease}/\
            geneid__{gene}-source__{source}/"
          templateKeys:  ## keywords in template
            source: "disgenet.genes_related_to_disease.source"
            gene: "disgenet.genes_related_to_disease.gene_id"
            disease: "inputs[0]"
            ## the UMLS Disease IDs (no prefix), used as input to the query
            ## should be an array of one or more strings 
          bteCode: ""  
          ## github link to the code that uses this info to process response
      provenance:  ## optional, include when possible  
      ## uses the transformResponseValues sub-schema
        instructions: >- 
          Map from the association source field value to an array of objects
          describing the sources (standard provenance model) using the 
          provenanceMapping object in the linked mapping file. Result in
          processed association should be a key (provenance) -> array of
          source info objects (see processed association schema)
        responseFieldsUsed: "disgenet.genes_related_to_disease.source"
        mappingFile: "draft7_mappingFile_disgenetDG.yaml"
        ## github link to file
        ## ?? use mappingFile to get source info for metaKG
        bteCode: ""  
        ## github link to the code that uses this info to process response
      numericMeasures:    ## optional, include when needed
      - name: "DisGeNET gene-disease association score"
        responseField: "disgenet.genes_related_to_disease.score"
        measureReferences:
          websites:   ## uses staticValue sub-schema
            value: "https://www.disgenet.org/dbinfo#section31"
        range:
          minExclusive: 0
          maxInclusive: 1
        directionMeaning:
          larger: more_evidence
      - name: "DisGeNET evidence index"
        responseField: "disgenet.genes_related_to_disease.EI"
        measureReferences:
          websites:    ## uses staticValue sub-schema
            value: "https://www.disgenet.org/dbinfo#section36"
        missingValueMeaning: >-
          This measure is calculated from BeFree and PsyGeNET info. If the
          association was not found in those sources, this measure was not
          calculated
        range:
          minExclusive: 0
          maxInclusive: 1
        directionMeaning:
          larger: less_conflicting_evid
      - name: "DisGeNET disease specificity index"
        ontologyTerm: 'SIO:001351'
        responseField: "disgenet.genes_related_to_disease.DSI"
        measureReferences:
          websites:    ## uses staticValue sub-schema
            value: "https://www.disgenet.org/dbinfo#section33"   
        missingValueMeaning: >-
          This measure is calculated when a gene is associated with one or
          more diseases. If the value is missing, this gene is annotated only
          to phenotypes
        range:
          minExclusive: 0
          maxInclusive: 1
        directionMeaning:
          larger: more_specific
      - name: "DisGeNET disease pleiotropy index"
        ontologyTerm: 'SIO:001352'
        responseField: "disgenet.genes_related_to_disease.DPI"
        measureReferences:
          websites:    ## uses staticValue sub-schema
            value: "https://www.disgenet.org/dbinfo#section34"    
        missingValueMeaning: >-
          This measure is calculated when a gene is associated with one or
          more diseases in MeSH disease classes. If the value is missing, this
          gene is annotated only to phenotypes OR the associated diseases do
          not map to any MeSH classes
        range:
          minExclusive: 0
          maxInclusive: 1
        directionMeaning:
          smaller: more_specific
    disease-variant1:  ## name for this operation      
    ## raw API/JSON-response example used to help write this:
## http://mydisease.info/v1/disease/MONDO:0016419?fields=disgenet.variants_related_to_disease
      inputsAndQueryInfo:  
      ## ?? add UMLS, PhenotypicFeature?
      - id: UMLS
        semantic: Disease
        ## ?? check that input IDs don't have prefixes
        queryInfo:  
          supportBatch: true
          inputSeparator: ","    
          parameters:
            fields: "disgenet.variants_related_to_disease"        
          requestBody:
            body:     
              q: "{inputs[0]}"
              scopes: "mondo.xrefs.umls, disgenet.xrefs.umls"
            header: "application/x-www-form-urlencoded"
      outputs:   
      - id: DBSNP
        semantic: SequenceVariant  
        ## assume no prefix in output IDs
        responseField: "disgenet.variants_related_to_disease.rsid"        
      predicateInfo:  ## biolink / id / label use staticValue sub-schema 
        biolink:  
          value: "related_to"  
        id:  
          value: "SIO:001403" 
        label: 
          value: "SIO:is_associated_with"  
      references:  
        publications:
        ## uses the takesOnResponseValue sub-schema
          pmid: 
            responseField: "disgenet.variants_related_to_disease.pubmed"
        websites:    ## uses the transformUsingTemplate sub-schema
          instructions: >-
            Create an array of one or more strings using the template. There
            should be a separate URL for each disease ID. Use the source
            keyword and SNP ID in the association. Result in processed
            association should be a key (websites) -> array of webpage URL
            strings (see processed association schema)
          ## this should be parsed as one string with no spaces
          template:
            "https://www.disgenet.org/browser/0/1/5/{disease}/\
            snpid__{snp}-source__{source}/"
          templateKeys:  ## keywords in template
            source: "disgenet.variants_related_to_disease.source"
            snp: "disgenet.variants_related_to_disease.rsid"
            disease: "inputs[0]"
            ## the UMLS Disease IDs (no prefix), used as input to the query
            ## should be an array of one or more strings 
          bteCode: ""  
          ## github link to the code that uses this info to process response
      provenance:  ## uses the transformResponseValues sub-schema
        instructions: >- 
          Map from the association source field value to an array of objects
          describing the sources (standard provenance model) using the 
          provenanceMapping object in the linked mapping file. Result in
          processed association should be a key (provenance) -> array of
          source info objects (see processed association schema)
        responseFieldsUsed: "disgenet.variants_related_to_disease.source"
        mappingFile: "draft7_mappingFile_disgenetDV.yaml"  
        ## github link to file
        bteCode: ""  
        ## github link to the code that uses this info to process response        
      numericMeasures:  
      - name: "DisGeNET variant-disease association score"
        responseField: "disgenet.variants_related_to_disease.score"
        measureReferences:          
          websites:   ## uses staticValue sub-schema
            value: "https://www.disgenet.org/dbinfo#section32"
        range:
          minExclusive: 0
          maxInclusive: 1
        directionMeaning:
          larger: more_evidence          
      - name: "DisGeNET evidence index"
        responseField: "disgenet.variants_related_to_disease.EI"
        measureReferences:
          websites:      ## uses staticValue sub-schema
            value: "https://www.disgenet.org/dbinfo#section36"
        missingValueMeaning: >-
          This measure is calculated from BeFree and PsyGeNET info. If the
          association was not found in those sources, this measure was not
          calculated
        range:
          minExclusive: 0
          maxInclusive: 1
        directionMeaning:
          larger: less_conflicting_evid            
      - name: "DisGeNET disease specificity index"
        ontologyTerm: 'SIO:001351'
        responseField: "disgenet.variants_related_to_disease.DSI"
        measureReferences:
          websites:       ## uses staticValue sub-schema
            value: "https://www.disgenet.org/dbinfo#section33"   
        missingValueMeaning: >-
          This measure is calculated when a variant is associated with one or
          more diseases. If the value is missing, this variant is annotated only
          to phenotypes
        range:
          minExclusive: 0
          maxInclusive: 1
        directionMeaning:
          larger: more_specific
      - name: "DisGeNET disease pleiotropy index"
        ontologyTerm: 'SIO:001352'
        responseField: "disgenet.variants_related_to_disease.DPI"
        measureReferences:
          websites:        ## uses staticValue sub-schema
            value: "https://www.disgenet.org/dbinfo#section34"    
        missingValueMeaning: >-
          This measure is calculated when a variant is associated with one or
          more diseases in MeSH disease classes. If the value is missing, this
          variant is annotated only to phenotypes OR the associated diseases do
          not map to any MeSH classes
        range:
          minExclusive: 0
          maxInclusive: 1
        directionMeaning:
          smaller: more_specific  
    gene-disease1:  ## name for this operation     
    ## note that the current API setup gives only the disease ID in response
    ## example: go to http://mydisease.info/#/query/post_query. Set...
    ##   fields: disgenet.xrefs.umls, size: 250, request body: "q": "1629",
    ##   "scopes": "disgenet.genes_related_to_disease.gene_id"
    ## Execute this query and see the results
      inputsAndQueryInfo: 
      - id: NCBIGene
        semantic: Gene
        ## assume no prefix in input IDs
        queryInfo:  
          supportBatch: true
          inputSeparator: ","    
          parameters:
            fields: "disgenet.xrefs.umls"    
            size: "250"
          requestBody:
            body:     
              q: "{inputs[0]}"
              scopes: "disgenet.genes_related_to_disease.gene_id"
            header: "application/x-www-form-urlencoded"        
      outputs: 
      ## ?? add UMLS, PhenotypicFeature?
      - id: UMLS
        semantic: Disease
        ## assume no prefix in output IDs
        responseField: "disgenet.xrefs.umls"
      predicateInfo:  ## biolink / id / label use staticValue sub-schema 
        biolink:  
          value: "related_to"  
        id:  
          value: "SIO:001403" 
        label: 
          value: "SIO:is_associated_with" 
      ## we can send users to the disgenet source webpage for more info...
      references:         
        websites:    ## uses the transformUsingTemplate sub-schema
          instructions: >-
            Create an array of one or more strings using the template. There
            should be a separate URL for each gene ID. Result in processed
            association should be a key (websites) -> array of webpage URL
            strings (see processed association schema)
          ## example: https://www.disgenet.org/browser/1/1/0/1629/
          template:
            "https://www.disgenet.org/browser/1/1/0/{gene}/"
          templateKeys:  ## keywords in template
            gene: "inputs[0]"
            ## the NCBIGene Gene IDs (no prefix), used as input to the query
            ## should be an array of one or more strings 
          bteCode: ""  
        ## github link to the code that uses this info to process response       
      provenance:  ## uses the oneProvenanceList sub-schema
      - name: "MyDisease.info API"
        sourceType: service
        version: "2020-10-26"
        versionType: "date_last_updated"
        method: ingest
        descriptiveInfo: >- 
          Downloaded the DisGeNET ALL gene-disease-pmid associations file.
          Merged gene-disease associations that differed only in the pmid value
      - name: "DisGeNET"
        sourceType: knowledgebase
        version: "7.0"
        versionType: "version_number"
        ## not including method since there isn't enough info 
        sourceReferences: 
          websites:       ## uses staticValue sub-schema
            value: "https://www.disgenet.org/dbinfo#section11"    
        descriptiveInfo: >- 
          The DisGeNET team created gene-disease associations using various
          resources or ingested the associations from another knowledge-source
    variant-disease1:
    ## note that the current API setup gives only the disease ID in response
    ## example: go to http://mydisease.info/#/query/post_query. Set...
    ##   fields: disgenet.xrefs.umls, size: 250, request body: "q": "rs1001179",
    ##   "scopes": "disgenet.variants_related_to_disease.rsid"
    ## Execute this query and see the results.      
      inputsAndQueryInfo: 
      - id: DBSNP
        semantic: SequenceVariant
        ## assume no prefix in input IDs
        queryInfo:  
          supportBatch: true
          inputSeparator: ","    
          parameters:
            fields: "disgenet.xrefs.umls"    
            size: "250"
          requestBody:
            body:     
              q: "{inputs[0]}"
              scopes: "disgenet.variants_related_to_disease.rsid"
            header: "application/x-www-form-urlencoded"
      outputs:  
      ## ?? add UMLS, PhenotypicFeature?
      - id: UMLS
        semantic: Disease  
        ## assume no prefix in output IDs
        responseField: "disgenet.xrefs.umls"    
      predicateInfo:  ## biolink / id / label use staticValue sub-schema
        biolink:  
          value: "related_to"  
        id:  
          value: "SIO:001403" 
        label: 
          value: "SIO:is_associated_with"     
      ## we can send users to the disgenet source webpage for more info...
      references:         
        websites:    ## uses the transformUsingTemplate sub-schema
          instructions: >-
            Create an array of one or more strings using the template. There
            should be a separate URL for each variant ID. Result in processed
            association should be a key (websites) -> array of webpage URL
            strings (see processed association schema)
          ## example: https://www.disgenet.org/browser/2/1/0/rs1001179/
          template:
            "https://www.disgenet.org/browser/2/1/0/{snp}/"
          templateKeys:  ## keywords in template
            snp: "inputs[0]"
            ## the DBSNP SequenceVariant IDs (no prefix), used as input to the
            ##   query. should be an array of one or more strings 
          bteCode: ""  
        ## github link to the code that uses this info to process response           
      provenance:  ## uses the oneProvenanceList sub-schema
      - name: "MyDisease.info API"
        sourceType: service
        version: "2020-10-26"
        versionType: "date_last_updated"
        method: ingest
        descriptiveInfo: >- 
          Downloaded the DisGeNET ALL variant-disease-pmid associations file.          
      - name: "DisGeNET"
        sourceType: knowledgebase
        version: "7.0"
        versionType: "version_number"
        ## not including method since there isn't enough info 
        sourceReferences: 
          websites:        ## uses staticValue sub-schema
            value: "https://www.disgenet.org/dbinfo#section12"
        descriptiveInfo: >- 
          The DisGeNET team created variant-disease associations using various
          resources or ingested the associations from another knowledge-source