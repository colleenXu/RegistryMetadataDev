## example of using the x-bte-association-retrieval schema 
##   to write a registry entry for querying MyDisease.info API
##   disease -> genes (which uses disgenet)
## notes about this specific registry entry: 
## - some API/JSON-response fields weren't used (YearInitial, YearFinal for
##   the years first and last reported)
## - MyDisease.info is a complex API with a lot of operations/sources that
##   aren't included here

## notes for developers:
##  - this registry file is related to other files: provenance-mapping file,
##    BTE code, and an example of a processed association. 
##  - in the future? have a script alerting developer of DisGeNET update.
##    Workflow: review the new DisGeNET data, change the parser if needed,
##    update the metadata files if needed 
## this is 79 char long #######################################################

components:      
  ## operations to query KPs for associations go under this x-bte extension
  x-bte-association-retrieval:  
  ## each object below describes one operation 
    disease-gene1:  ## name for this particular operation
    ## raw API response example used to help write this:
    ## http://mydisease.info/v1/disease/MONDO:0016419?fields=
    ##   disgenet.genes_related_to_disease
      inputsAndQueryInfo:  ## required
      ## ?? add UMLS, PhenotypicFeature? 
      - id: UMLS
        semantic: Disease
        ## ?? check that input IDs don't have prefixes
        queryInfo:  ## required
          supportBatch: true
          inputSeparator: ","
          parameters:
            fields: "disgenet.genes_related_to_disease"
          requestBody:
            body:     
              q: "{inputs[0]}"
              scopes: "mondo.xrefs.umls, disgenet.xrefs.umls"
            header: "application/x-www-form-urlencoded"        
      outputs:   ## required
      - id: NCBIGene
        semantic: Gene  
        ## assume no prefix in output IDs
        responseField: "disgenet.gene_related_to_disease.gene_id"
      predicateInfo:   ## required
      ## biolink / id / label use staticValue sub-schema 
        biolink:  
          value: "related_to"  
        id:  
          value: "SIO:001403" 
        label: 
          value: "SIO:is_associated_with" 
      references:  ## optional, include when possible
        publications:
        ## API response field is an array of ints (PMIDs, no prefixes) 
        ## uses the takesOnResponseValue sub-schema since that format is fine
        ##   for the final values (see the processed association schema)
          pmid: 
            responseField: "disgenet.genes_related_to_disease.pubmed"
        websites:    ## uses the transformUsingTemplate sub-schema
          instructions: >-
            Create an array of one or more strings using the template. There
            should be a separate URL for each disease ID. Use the source
            keyword and gene ID in the association. Result in processed
            association should be a key (websites) -> array of webpage URL
            strings (see processed association schema)
          ## this should be parsed as one string with no spaces
          template:
            "https://www.disgenet.org/browser/0/1/1/{disease}/\
            geneid__{gene}-source__{source}/"
          templateKeys:  ## keywords in template
            source: "disgenet.genes_related_to_disease.source"
            gene: "disgenet.genes_related_to_disease.gene_id"
            disease: "inputs[0]"
            ## the UMLS Disease IDs (no prefix), used as input to the query
            ## should be an array of one or more strings 
          bteCode: ""  
          ## github link to the code that uses this info to process response
      provenance:  ## optional, include when possible  
      ## uses the transformResponseValues sub-schema
        instructions: >- 
          Map from the association source field value to an array of objects
          describing the sources (standard provenance model) using the 
          provenanceMapping object in the linked mapping file. Result in
          processed association should be a key (provenance) -> array of
          source info objects (see processed association schema)
        responseFieldsUsed: "disgenet.genes_related_to_disease.source"
        mappingFile: "draft7_mappingFile_disgenetDG.yaml"
        ## github link to file
        ## ?? use mappingFile to get source info for metaKG
        bteCode: ""  
        ## github link to the code that uses this info to process response
      numericMeasures:    ## optional, include when needed
      - name: "DisGeNET gene-disease association score"
        responseField: "disgenet.genes_related_to_disease.score"
        measureReferences:
          websites:   ## uses staticValue sub-schema
            value: "https://www.disgenet.org/dbinfo#section31"
        range:
          minExclusive: 0
          maxInclusive: 1
        directionMeaning:
          larger: more_evidence
      - name: "DisGeNET evidence index"
        responseField: "disgenet.genes_related_to_disease.EI"
        measureReferences:
          websites:    ## uses staticValue sub-schema
            value: "https://www.disgenet.org/dbinfo#section36"
        missingValueMeaning: >-
          This measure is calculated from BeFree and PsyGeNET info. If the
          association was not found in those sources, this measure was not
          calculated
        range:
          minExclusive: 0
          maxInclusive: 1
        directionMeaning:
          larger: less_conflicting_evid
      - name: "DisGeNET disease specificity index"
        ontologyTerm: 'SIO:001351'
        responseField: "disgenet.genes_related_to_disease.DSI"
        measureReferences:
          websites:    ## uses staticValue sub-schema
            value: "https://www.disgenet.org/dbinfo#section33"   
        missingValueMeaning: >-
          This measure is calculated when a gene is associated with one or
          more diseases. If the value is missing, this gene is annotated only
          to phenotypes
        range:
          minExclusive: 0
          maxInclusive: 1
        directionMeaning:
          larger: more_specific
      - name: "DisGeNET disease pleiotropy index"
        ontologyTerm: 'SIO:001352'
        responseField: "disgenet.genes_related_to_disease.DPI"
        measureReferences:
          websites:    ## uses staticValue sub-schema
            value: "https://www.disgenet.org/dbinfo#section34"    
        missingValueMeaning: >-
          This measure is calculated when a gene is associated with one or
          more diseases in MeSH disease classes. If the value is missing, this
          gene is annotated only to phenotypes OR the associated diseases do
          not map to any MeSH classes
        range:
          minExclusive: 0
          maxInclusive: 1
        directionMeaning:
          smaller: more_specific